name: üöÄ –î–µ–ø–ª–æ–π –≤ Yandex Cloud

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—É—à–µ –≤ –≤–µ—Ç–∫—É main
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: üîß –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    runs-on: ubuntu-latest

    steps:
      # 1. –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
      - name: üì¶ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥
        uses: actions/checkout@v4

      # 2. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
      - name: üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pytest tests/ -v || echo "Tests failed but continuing deployment"

      # 3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å YC CLI
      - name: üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      # 3.1. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å YC CLI –ø–æ–¥ —Å–µ—Ä–≤–∏—Å–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º (–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è YC: yc config set ...)
      - name: üîê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å YC CLI auth
        run: |
          echo '${{ secrets.YC_SERVICE_ACCOUNT_SECRET_KEY }}' > sa.json
          $HOME/yandex-cloud/bin/yc config set service-account-key sa.json
          $HOME/yandex-cloud/bin/yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          $HOME/yandex-cloud/bin/yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

      # 4. –õ–æ–≥–∏–Ω –≤ Yandex Cloud Container Registry
      - name: üîê Login to Yandex Cloud CR
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SERVICE_ACCOUNT_SECRET_KEY }}

      # 5. –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å Docker –æ–±—Ä–∞–∑
      - name: üì¶ –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å Docker –æ–±—Ä–∞–∑
        env:
          CR_REGISTRY: ${{ secrets.YC_REGISTRY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          export DOCKER_CLIENT_TIMEOUT=300
          export COMPOSE_HTTP_TIMEOUT=300
          export DOCKER_MAX_CONCURRENT_UPLOADS=1
          docker build -t cr.yandex/$CR_REGISTRY/johnsons-bot:$IMAGE_TAG .
          for i in 1 2 3; do \
            docker push cr.yandex/$CR_REGISTRY/johnsons-bot:$IMAGE_TAG && break || { \
              echo "docker push failed (attempt $i), retrying..."; sleep $((i*15)); \
            }; \
          done

      # 6. –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ Serverless Containers
      - name: üöÄ –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ Serverless Containers
        id: deploy-sls
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SERVICE_ACCOUNT_SECRET_KEY }}
          container-name: johnsons-bot
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY }}/johnsons-bot:${{ github.sha }}
          revision-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          revision-cores: 1
          revision-memory: 1024Mb
          revision-core-fraction: 100
          revision-concurrency: 1
          revision-execution-timeout: 60s
          revision-env: |
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}
            YC_STORAGE_KEY_ID=${{ secrets.YC_STORAGE_KEY_ID }}
            YC_STORAGE_SECRET_KEY=${{ secrets.YC_STORAGE_SECRET_KEY }}
            S3_ENDPOINT=storage.yandexcloud.net
            S3_REGION=ru-central1
            YMQ_QUEUE_URL=${{ vars.YMQ_QUEUE_URL }}
          revision-min-instances: 1
          revision-max-instances: 1

      # 6.1. –ü—Ä–∏–≤—è–∑–∞—Ç—å Lockbox —Å–µ–∫—Ä–µ—Ç—ã (—á—Ç–æ–±—ã —Ä—É—á–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ —Ä–µ–≤–∏–∑–∏–∏ –Ω–µ –∑–∞—Ç–∏—Ä–∞–ª–∏—Å—å)
      - name: üîê –ü—Ä–∏–≤—è–∑–∞—Ç—å Lockbox —Å–µ–∫—Ä–µ—Ç—ã –∫ —Ä–µ–≤–∏–∑–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        run: |
          CR_REGISTRY=${{ secrets.YC_REGISTRY }}
          IMAGE_TAG=${{ github.sha }}
          $HOME/yandex-cloud/bin/yc serverless container revision deploy \
            --container-name johnsons-bot \
            --folder-id ${{ secrets.YC_FOLDER_ID }} \
            --image cr.yandex/$CR_REGISTRY/johnsons-bot:$IMAGE_TAG \
            --service-account-id ${{ secrets.YC_SERVICE_ACCOUNT_ID }} \
            --cores 1 \
            --memory 1024MB \
            --concurrency 1 \
            --execution-timeout 60s \
            --environment S3_ENDPOINT=storage.yandexcloud.net,S3_REGION=ru-central1,YMQ_QUEUE_URL=${{ vars.YMQ_QUEUE_URL }} \
            --secret id=${{ vars.LOCKBOX_SECRET_ID }},version-id=latest,key=TELEGRAM_BOT_TOKEN,environment-variable=TELEGRAM_BOT_TOKEN \
            --secret id=${{ vars.LOCKBOX_SECRET_ID }},version-id=latest,key=YC_STORAGE_KEY_ID,environment-variable=YC_STORAGE_KEY_ID \
            --secret id=${{ vars.LOCKBOX_SECRET_ID }},version-id=latest,key=YC_STORAGE_SECRET_KEY,environment-variable=YC_STORAGE_SECRET_KEY

      # 6.1. –ü–æ—Å—Ç-–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–≤–∏–∑–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞ (–≥–æ—Ç–æ–≤–∏–º –Ω–∞–¥—ë–∂–Ω—É—é CLI-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)

      # 7. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook –≤ Telegram
      - name: üîó –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram Webhook
        run: |
          if [ -n "${{ secrets.WEBHOOK_URL }}" ]; then
            echo "Setting webhook to: ${{ secrets.WEBHOOK_URL }}"
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/setWebhook" \
              -H "Content-Type: application/json" \
              -d "{\"url\": \"${{ secrets.WEBHOOK_URL }}/${{ secrets.TELEGRAM_BOT_TOKEN }}\"}"
          else
            echo "WEBHOOK_URL not set, skipping webhook configuration"
          fi