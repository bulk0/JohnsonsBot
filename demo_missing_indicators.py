"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¢–†–ò —Å—Ü–µ–Ω–∞—Ä–∏—è:
1. –ù–µ—Ç –ø—Ä–æ–ø—É—Å–∫–æ–≤ ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä = –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ (–≤—Å–µ 0)
2. –í—Å–µ –ø—Ä–æ–ø—É—Å–∫–∏ ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä = –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ (–≤—Å–µ 1)
3. –ß–∞—Å—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–ø—É—Å–∫–∏ ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏–º–µ–µ—Ç –≤–∞—Ä–∏–∞—Ü–∏—é (0 –∏ 1) ‚úÖ –†–ê–ë–û–¢–ê–ï–¢
"""

import pandas as pd
import numpy as np

# –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
np.random.seed(42)

def analyze_scenario(data, scenario_name):
    """–ê–Ω–∞–ª–∏–∑ —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏"""
    print(f"\n{'='*70}")
    print(f"–°–¶–ï–ù–ê–†–ò–ô: {scenario_name}")
    print(f"{'='*70}")
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–ø—É—Å–∫–æ–≤
    data['q1_missing'] = data['q1'].isna().astype(int)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–ø—É—Å–∫–æ–≤
    missing_count = data['q1_missing'].sum()
    total_count = len(data)
    missing_pct = (missing_count / total_count) * 100
    
    print(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_count}")
    print(f"–ü—Ä–æ–ø—É—Å–∫–æ–≤ –≤ q1: {missing_count} ({missing_pct:.1f}%)")
    print(f"q1_missing –∑–Ω–∞—á–µ–Ω–∏—è: {data['q1_missing'].value_counts().to_dict()}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω–æ—Å—Ç—å
    std_q1_missing = data['q1_missing'].std()
    is_constant = std_q1_missing == 0
    
    print(f"\n–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ q1_missing: {std_q1_missing:.4f}")
    
    if is_constant:
        print("‚ùå –ò–ù–î–ò–ö–ê–¢–û–† –ö–û–ù–°–¢–ê–ù–¢–ï–ù ‚Üí –±—É–¥–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –º–æ–¥–µ–ª–∏")
        print("   –í–µ—Å–∞ –¥–ª—è q1_missing –ù–ï –±—É–¥—É—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã")
    else:
        print("‚úÖ –ò–ù–î–ò–ö–ê–¢–û–† –ò–ú–ï–ï–¢ –í–ê–†–ò–ê–¶–ò–Æ ‚Üí –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω –≤ –º–æ–¥–µ–ª—å")
        print("   –í–µ—Å–∞ –¥–ª—è q1_missing –ë–£–î–£–¢ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã")
        
        # –ò–º–ø—É—Ç–∞—Ü–∏—è –∏ —Ä–∞—Å—á–µ—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
        data_imputed = data.copy()
        data_imputed['q1'] = data_imputed['q1'].fillna(data_imputed['q1'].mean())
        
        # –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å –∑–∞–≤–∏—Å–∏–º–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        corr = data_imputed[['q1_missing', 'y']].corr().iloc[0, 1]
        print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è q1_missing —Å y: {corr:.4f}")
        
        if abs(corr) > 0.1:
            print(f"   ‚Üí –°–∞–º —Ñ–∞–∫—Ç –ø—Ä–æ–ø—É—Å–∫–∞ –ó–ù–ê–ß–ò–ú –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è!")
        else:
            print(f"   ‚Üí –§–∞–∫—Ç –ø—Ä–æ–ø—É—Å–∫–∞ –º–∞–ª–æ–∑–Ω–∞—á–∏–º")
    
    return not is_constant


# –°–¶–ï–ù–ê–†–ò–ô 1: –ù–ï–¢ –ü–†–û–ü–£–°–ö–û–í
print("\n" + "üî∑"*35)
print("–¢–ï–û–†–ò–Ø: –ö–æ–≥–¥–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–ø—É—Å–∫–æ–≤ –ù–ï –†–ê–ë–û–¢–ê–Æ–¢")
print("üî∑"*35)

data1 = pd.DataFrame({
    'q1': np.random.normal(5, 1, 100),  # –ù–µ—Ç –ø—Ä–æ–ø—É—Å–∫–æ–≤
    'q2': np.random.normal(5, 1, 100),
    'y': np.random.normal(10, 2, 100)
})
analyze_scenario(data1, "–ù–ï–¢ –ü–†–û–ü–£–°–ö–û–í –≤ q1")


# –°–¶–ï–ù–ê–†–ò–ô 2: –í–°–ï –ü–†–û–ü–£–°–ö–ò
data2 = pd.DataFrame({
    'q1': [np.nan] * 100,  # –í—Å–µ –ø—Ä–æ–ø—É—Å–∫–∏
    'q2': np.random.normal(5, 1, 100),
    'y': np.random.normal(10, 2, 100)
})
analyze_scenario(data2, "–í–°–ï –ó–ù–ê–ß–ï–ù–ò–Ø –ü–†–û–ü–£–©–ï–ù–´ –≤ q1")


# –°–¶–ï–ù–ê–†–ò–ô 3: –ß–ê–°–¢–ò–ß–ù–´–ï –ü–†–û–ü–£–°–ö–ò (–ò–î–ï–ê–õ–¨–ù–´–ô –°–õ–£–ß–ê–ô)
print("\n" + "üî∂"*35)
print("–ü–†–ê–ö–¢–ò–ö–ê: –ö–æ–≥–¥–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–ø—É—Å–∫–æ–≤ –†–ê–ë–û–¢–ê–Æ–¢")
print("üî∂"*35)

data3 = pd.DataFrame({
    'q1': np.random.normal(5, 1, 100),
    'q2': np.random.normal(5, 1, 100),
    'y': np.random.normal(10, 2, 100)
})
# 30% —Å–ª—É—á–∞–π–Ω—ã—Ö –ø—Ä–æ–ø—É—Å–∫–æ–≤
missing_mask = np.random.choice([True, False], size=100, p=[0.3, 0.7])
data3.loc[missing_mask, 'q1'] = np.nan

# –î–µ–ª–∞–µ–º –ø—Ä–æ–ø—É—Å–∫–∏ –Ω–µ—Å–ª—É—á–∞–π–Ω—ã–º–∏: –≥–¥–µ y –Ω–∏–∑–∫–æ–µ, –±–æ–ª—å—à–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤
# –≠—Ç–æ —Å–∏–º—É–ª–∏—Ä—É–µ—Ç —Å–∏—Ç—É–∞—Ü–∏—é "—Ç–µ, –∫—Ç–æ –Ω–µ–¥–æ–≤–æ–ª–µ–Ω, –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç"
low_satisfaction = data3['y'] < data3['y'].median()
data3.loc[low_satisfaction & missing_mask, 'q1'] = np.nan

analyze_scenario(data3, "–ß–ê–°–¢–ò–ß–ù–´–ï –ü–†–û–ü–£–°–ö–ò –≤ q1 (30%)")


# –†–ï–ê–õ–¨–ù–û–°–¢–¨: –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –≤–∞—à–µ–º –∫–æ–¥–µ
print("\n" + "üî¥"*35)
print("–ß–¢–û –ü–†–û–ò–°–•–û–î–ò–¢ –í –í–ê–®–ï–ú –ö–û–î–ï")
print("üî¥"*35)

print("""
–í —Ñ—É–Ω–∫—Ü–∏–∏ hybrid_imputation():
1. –°–æ–∑–¥–∞—é—Ç—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –í–°–ï–• –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
2. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ extended_vars

–í —Ñ—É–Ω–∫—Ü–∏–∏ calculate_weights():
3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –í–°–ï–• –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
4. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å std=0 –ò–°–ö–õ–Æ–ß–ê–Æ–¢–°–Ø –∏–∑ –º–æ–¥–µ–ª–∏
5. –†–∞—Å—á–µ—Ç –≤–µ—Å–æ–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

–†–ï–ó–£–õ–¨–¢–ê–¢:
- –ï—Å–ª–∏ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –Ω–µ—Ç (–∫–æ–¥ 99 –æ–±—Ä–∞–±–æ—Ç–∞–Ω) ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä = –≤—Å–µ 0 ‚Üí –ò–°–ö–õ–Æ–ß–ï–ù
- –ï—Å–ª–∏ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –Ω–µ–º–Ω–æ–≥–æ ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä = –ø–æ—á—Ç–∏ –≤—Å–µ 0 ‚Üí –ò–°–ö–õ–Æ–ß–ï–ù  
- –ï—Å–ª–∏ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –º–Ω–æ–≥–æ ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä = –ø–æ—á—Ç–∏ –≤—Å–µ 1 ‚Üí –ò–°–ö–õ–Æ–ß–ï–ù
- –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–ø—É—Å–∫–∏ ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä = –≤—Å–µ 1 ‚Üí –ò–°–ö–õ–Æ–ß–ï–ù

‚úÖ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –í–ö–õ–Æ–ß–ê–ï–¢–°–Ø —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞:
   - –í –ø–æ–¥–≥—Ä—É–ø–ø–µ –µ—Å—Ç—å –ò –ø—Ä–æ–ø—É—Å–∫–∏ –ò –Ω–µ–ø—Ä–æ–ø—É—Å–∫–∏
   - –î–æ–ª—è –ø—Ä–æ–ø—É—Å–∫–æ–≤ –æ—Ç ~10% –¥–æ ~90%
   - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –≤–∞—Ä–∏–∞—Ü–∏—é
""")

print("\n" + "üí°"*35)
print("–í–´–í–û–î")
print("üí°"*35)

print("""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–ø—É—Å–∫–æ–≤) –¢–ï–û–†–ï–¢–ò–ß–ï–°–ö–ò –ø–æ–ª–µ–∑–Ω—ã:
‚úÖ –û–Ω–∏ –º–æ–≥—É—Ç –≤—ã—è–≤–∏—Ç—å, –µ—Å–ª–∏ —Å–∞–º —Ñ–∞–∫—Ç –ø—Ä–æ–ø—É—Å–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–æ–º
‚úÖ –ü—Ä–∏–º–µ—Ä: "–¢–µ, –∫—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å NPS, –Ω–µ–¥–æ–≤–æ–ª—å–Ω—ã"

–ù–û –Ω–∞ –ü–†–ê–ö–¢–ò–ö–ï –≤ –≤–∞—à–µ–º –∫–æ–¥–µ:
‚ùå –ö–æ–¥ 99 ("–ó–∞—Ç—Ä—É–¥–Ω—è—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å") –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ NaN
‚ùå –ü–æ—Å–ª–µ –∏–º–ø—É—Ç–∞—Ü–∏–∏ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –ø–æ–¥–≥—Ä—É–ø–ø:
   - –õ–∏–±–æ –Ω–µ—Ç –ø—Ä–æ–ø—É—Å–∫–æ–≤ (–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä = –≤—Å–µ 0)
   - –õ–∏–±–æ –æ—á–µ–Ω—å –º–∞–ª–æ/–º–Ω–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ (–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ—á—Ç–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–µ–Ω)
‚ùå –ö–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–∫–ª—é—á–∞—é—Ç—Å—è
‚ùå –í –∏—Ç–æ–≥–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∏—Ö –Ω–µ—Ç

–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:
1. –ï—Å–ª–∏ –≤ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∫–æ–¥ 99 –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ä–µ–¥–∫–æ ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã
2. –ï—Å–ª–∏ –∫–æ–¥ 99 —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º ‚Üí –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ü–µ–Ω–Ω—ã
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –µ—Å—Ç—å –ª–∏ –≤–∞—Ä–∏–∞—Ü–∏—è –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞—Ö?
4. –ï—Å–ª–∏ –Ω–µ—Ç - —É–ø—Ä–æ—Å—Ç–∏—Ç–µ –∫–æ–¥, —É–¥–∞–ª–∏–≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
""")

